{% extends 'base.html.twig' %}

{% block title %}FoodMate - Calendar{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
          integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
          crossorigin="anonymous" referrerpolicy="no-referrer"/>
    <style>
        :root {
            --primary-clr: rgba(136, 207, 139, 1);
        }

        /* nice scroll bar */
        ::-webkit-scrollbar {
            width: 5px;
        }

        ::-webkit-scrollbar-track {
            background: #f5f5f5;
            border-radius: 50px;
        }

        ::-webkit-scrollbar-thumb {
            background: var(--primary-clr);
            border-radius: 50px;
        }

        .container {
            position: relative;
            width: 1200px;
            min-height: 850px;
            margin: 0 auto;
            color: #fff;
            display: flex;
            background-color: lightgray;

        }

        .left {
            width: 60%;
            padding: 20px;
        }

        .calendar {
            position: relative;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            flex-wrap: wrap;
            justify-content: space-between;
            color: #88cf8b;
            border-radius: 5px;
            background-color: #fff;
        }

        /* set after behind the main element */
        .calendar .month {
            width: 100%;
            height: 150px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 50px;
            font-size: 1.2rem;
            font-weight: 500;
            text-transform: capitalize;
        }

        .calendar .month .prev,
        .calendar .month .next {
            cursor: pointer;
        }

        .calendar .month .prev:hover,
        .calendar .month .next:hover {
            color: var(--primary-clr);
        }

        .calendar .weekdays {
            width: 100%;
            height: 100px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 20px;
            font-size: 1rem;
            font-weight: 500;
            text-transform: capitalize;
        }

        .weekdays div {
            width: 14.28%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .calendar .days {
            width: 100%;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            padding: 0 20px;
            font-size: 1rem;
            font-weight: 500;
            margin-bottom: 20px;
        }

        .calendar .days .day {
            width: 14.28%;
            height: 90px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            color: var(--primary-clr);
            border: 1px solid #f5f5f5;
        }

        .calendar .days .day:nth-child(7n + 1) {
            border-left: 2px solid #f5f5f5;
        }

        .calendar .days .day:nth-child(7n) {
            border-right: 2px solid #f5f5f5;
        }

        .calendar .days .day:nth-child(-n + 7) {
            border-top: 2px solid #f5f5f5;
        }

        .calendar .days .day:nth-child(n + 29) {
            border-bottom: 2px solid #f5f5f5;
        }

        .calendar .days .day:not(.prev-date, .next-date):hover {
            color: #fff;
            background-color: var(--primary-clr);
        }

        .calendar .days .prev-date,
        .calendar .days .next-date {
            color: #b3b3b3;
        }

        .calendar .days .active {
            position: relative;
            font-size: 2rem;
            color: #fff;
            background-color: var(--primary-clr);
        }

        .calendar .days .active::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            box-shadow: 0 0 10px 2px var(--primary-clr);
        }

        .calendar .days .today {
            font-size: 2rem;
        }

        .calendar .days .event {
            position: relative;
        }

        .calendar .days .event::after {
            content: "";
            position: absolute;
            bottom: 10%;
            left: 50%;
            width: 75%;
            height: 6px;
            border-radius: 30px;
            transform: translateX(-50%);
            background-color: var(--primary-clr);
        }

        .col-form-label {
            color: black;
        }

        .calendar .days .day:hover.event::after {
            background-color: #fff;
        }

        .calendar .days .active.event::after {
            background-color: #fff;
            bottom: 20%;
        }

        .calendar .days .active.event {
            padding-bottom: 10px;
        }

        .calendar .goto-today {
            width: 100%;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: 5px;
            padding: 0 20px;
            margin-bottom: 20px;
            color: var(--primary-clr);
        }

        .calendar .goto-today .goto {
            display: flex;
            align-items: center;
            border-radius: 5px;
            overflow: hidden;
            border: 1px solid var(--primary-clr);
        }

        .calendar .goto-today .goto input {
            width: 100%;
            height: 30px;
            outline: none;
            border: none;
            border-radius: 5px;
            padding: 0 20px;
            color: var(--primary-clr);
            border-radius: 5px;
        }

        .calendar .goto-today button {
            padding: 5px 10px;
            border: 1px solid var(--primary-clr);
            border-radius: 5px;
            background-color: transparent;
            cursor: pointer;
            color: var(--primary-clr);
        }

        .calendar .goto-today button:hover {
            color: #fff;
            background-color: var(--primary-clr);
        }

        .calendar .goto-today .goto button {
            border: none;
            border-left: 1px solid var(--primary-clr);
            border-radius: 0;
        }

        .container .right {
            position: relative;
            width: 40%;
            min-height: 100%;
            padding: 20px 0;
        }

        .right .today-date {
            width: 100%;
            height: 50px;
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            align-items: center;
            justify-content: space-between;
            padding: 0 40px;
            padding-left: 70px;
            margin-top: 50px;
            margin-bottom: 20px;
            text-transform: capitalize;
        }

        .right .today-date .event-day {
            font-size: 2rem;
            font-weight: 500;
            color: #404040;
        }

        .right .today-date .event-date {
            font-size: 1rem;
            font-weight: 400;
            color: #595959;
        }

        .events {
            width: 100%;
            height: 100%;
            max-height: 600px;
            overflow-x: hidden;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            padding-left: 4px;
        }

        .events .event {
            position: relative;
            width: 95%;
            min-height: 70px;
            display: flex;
            justify-content: center;
            flex-direction: column;
            gap: 5px;
            padding: 0 20px;
            padding-left: 50px;
            color: #fff;
            background-color: var(--primary-clr);
            cursor: pointer;
        }

        .events .event:hover {
            background-color: rgba(255, 0, 0, 0.5);
        }

        .events .event .title {
            display: flex;
            align-items: center;
            pointer-events: none;
        }

        .events .event .title .event-title {
            font-size: 23px;
            font-weight: 400;
            margin-left: 20px;
        }

        .events .event i {
            color: white;
            font-size: 0.5rem;
        }

        .events .event:hover i {
            color: #fff;
        }

        .events .event .event-time {
            font-size: 0.8rem;
            font-weight: 400;
            color: #878895;
            margin-left: 15px;
            pointer-events: none;
        }

        .events .event:hover .event-time {
            color: #fff;
        }

        /* add tick in event after */
        .events .event::after {
            content: "x";
            position: absolute;
            top: 30px;
            right: 10px;
            font-size: 3rem;
            line-height: 1;
            display: none;
            align-items: center;
            justify-content: center;
            opacity: 0.3;
            color: black;
            transform: translateY(-50%);
        }

        .events .event:hover::after {
            display: flex;
        }

        .add-event {
            position: absolute;
            bottom: 30px;
            right: 30px;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1rem;
            color: #878895;
            border: 2px solid #878895;
            opacity: 0.5;
            border-radius: 50%;
            background-color: transparent;
            cursor: pointer;
        }

        .add-event:hover {
            opacity: 1;
        }

        .add-event i {
            pointer-events: none;
        }

        .events .no-event {
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            font-weight: 500;
            color: #878895;
        }

        .add-event-wrapper {
            position: absolute;
            bottom: 100px;
            left: 50%;
            width: 100%;
            max-height: 0;
            overflow: hidden;
            border-radius: 5px;
            background-color: #fff;
            transform: translateX(-50%);
            transition: max-height 0.5s ease;
        }

        .add-event-wrapper.active {
            max-height: 800px;
            min-height: 350px;
        }

        .add-event-header {
            width: 100%;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 20px;
            color: #373c4f;
            border-bottom: 1px solid #f5f5f5;
        }

        .add-event-header .close {
            font-size: 1.5rem;
            cursor: pointer;
        }

        .add-event-header .close:hover {
            color: var(--primary-clr);
        }

        .add-event-header .title {
            font-size: 1.2rem;
            font-weight: 500;
        }

        .add-event-body {
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            gap: 5px;
            padding: 20px;
        }

        .add-event-body .add-event-input {
            width: 100%;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: 10px;
        }

        .add-event-body .add-event-input input {
            width: 100%;
            height: 100%;
            outline: none;
            border: none;
            border-bottom: 1px solid #f5f5f5;
            padding: 0 10px;
            font-size: 1rem;
            font-weight: 400;
            color: #373c4f;
        }

        .add-event-body .add-event-input input::placeholder {
            color: #a5a5a5;
        }

        .add-event-body .add-event-input input:focus {
            border-bottom: 1px solid var(--primary-clr);
        }

        .add-event-body .add-event-input input:focus::placeholder {
            color: var(--primary-clr);
        }

        .add-event-footer {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .add-event-footer .add-event-btn {
            height: 40px;
            font-size: 1rem;
            font-weight: 500;
            outline: none;
            border: none;
            color: #fff;
            background-color: var(--primary-clr);
            border-radius: 5px;
            cursor: pointer;
            padding: 5px 10px;
            border: 1px solid var(--primary-clr);
        }

        .add-event-footer .add-event-btn:hover {
            background-color: transparent;
            color: var(--primary-clr);
        }

        label {
            color: Black;
        }

        /* media queries */

        @media screen and (max-width: 1000px) {
            body {
                align-items: flex-start;
                justify-content: flex-start;
            }

            .container {
                min-height: 100vh;
                flex-direction: column;
                border-radius: 0;
            }

            .container .left {
                width: 100%;
                height: 100%;
                padding: 20px 0;
            }

            .container .right {
                width: 100%;
                height: 100%;
                padding: 20px 0;
            }

            .calendar::before,
            .calendar::after {
                top: 100%;
                left: 50%;
                width: 97%;
                height: 12px;
                border-radius: 0 0 5px 5px;
                transform: translateX(-50%);
            }

            .calendar::before {
                width: 94%;
                top: calc(100% + 12px);
            }

            .events {
                padding-bottom: 340px;
            }

            .add-event-wrapper {
                bottom: 100px;
            }
        }

        @media screen and (max-width: 500px) {
            .calendar .month {
                height: 75px;
            }

            .calendar .weekdays {
                height: 50px;
            }

            .calendar .days .day {
                height: 40px;
                font-size: 0.8rem;
            }

            .calendar .days .day.active,
            .calendar .days .day.today {
                font-size: 1rem;
            }

            .right .today-date {
                padding: 20px;
            }
        }

        .credits {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            text-align: center;
            padding: 10px;
            font-size: 12px;
            color: #fff;
            background-color: #b38add;
        }

        .credits a {
            text-decoration: none;
            font-weight: 600;
        }

        .credits a:hover {
            text-decoration: underline;
        }
    </style>
{% endblock %}
{% block main %}
    <div class="container">
        <div class="left">
            <div class="calendar">
                <div class="month">
                    <i class="fas fa-angle-left prev"></i>
                    <div class="date"></div>
                    <i class="fas fa-angle-right next"></i>
                </div>
                <div class="weekdays">
                    <div>P</div>
                    <div>W</div>
                    <div>Ś</div>
                    <div>C</div>
                    <div>P</div>
                    <div>S</div>
                    <div>N</div>
                </div>
                <div class="days"></div>
                <div class="goto-today">
                    <button class="today-btn">Dzisiaj</button>
                </div>
            </div>
        </div>
        <div class="right">
            <div class="today-date">
                <div class="event-day"></div>
                <div class="event-date"></div>
            </div>
            <div class="events">

            </div>
            <div class="add-event-wrapper">
                <div class="add-event-header">
                    <div class="title">Jadłospis</div>
                    <i class="fas fa-times close"></i>
                </div>
                {{ form(form) }}
            </div>
        </div>
        <button class="add-event">
            <i class="fas fa-plus"></i>
        </button>
    </div>
    <script>
        const calendar = document.querySelector(".calendar"),
            date = document.querySelector(".date"),
            daysContainer = document.querySelector(".days"),
            prev = document.querySelector(".prev"),
            next = document.querySelector(".next"),
            todayBtn = document.querySelector(".today-btn"),
            gotoBtn = document.querySelector(".goto-btn"),
            eventDay = document.querySelector(".event-day"),
            eventDate = document.querySelector(".event-date"),
            eventsContainer = document.querySelector(".events"),
            addEventBtn = document.querySelector(".add-event"),
            addEventWrapper = document.querySelector(".add-event-wrapper "),
            addEventCloseBtn = document.querySelector(".close "),
            addEventTitle = document.querySelector(".event-name "),
            addEventMeal = document.querySelector(".event-meal "),
            addEventSubmit = document.querySelector(".add-event-btn ");

        let today = new Date();
        let activeDay;
        let month = today.getMonth();
        let year = today.getFullYear();

        const months = [
            "Styczeń",
            "Luty",
            "Marzec",
            "Kwiecień",
            "Maj",
            "Czerwiec",
            "Lipiec",
            "Sierpień",
            "Wrzesień",
            "Pażdziernik",
            "Listopad",
            "Grudzień",
        ];

        const days = [
            "Niedziela",
            "Poniedziałek",
            "Wtorek",
            "Środa",
            "Czwartek",
            "Piątek",
            "Sobota",
        ]

        // const eventsArr = [
        //   {
        //     day: 13,
        //     month: 11,
        //     year: 2022,
        //     events: [
        //       {
        //         title: "Event 1 lorem ipsun dolar sit genfa tersd dsad ",
        //         time: "10:00 AM",
        //       },
        //       {
        //         title: "Event 2",
        //         time: "11:00 AM",
        //       },
        //     ],
        //   },
        // ];

        const eventsArr = [];
        getEvents();
        console.log(eventsArr);

        //function to add days in days with class day and prev-date next-date on previous month and next month days and active on today
        function initCalendar() {
            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            const prevLastDay = new Date(year, month, 0);
            const prevDays = prevLastDay.getDate();
            const lastDate = lastDay.getDate();
            const day = (firstDay.getDay() + 6) % 7; // Adjusted to start from Monday (0-indexed)

            let days = "";

            for (let x = day; x > 0; x--) {
                days += `<div class="day prev-date">${prevDays - x + 1}</div>`;
            }

            for (let i = 1; i <= lastDate; i++) {
                let event = false;
                // Check if event is present on that day
                eventsArr.forEach((eventObj) => {
                    if (
                        eventObj.day === i &&
                        eventObj.month === month + 1 &&
                        eventObj.year === year
                    ) {
                        event = true;
                    }
                });

                if (
                    i === new Date().getDate() &&
                    year === new Date().getFullYear() &&
                    month === new Date().getMonth()
                ) {
                    activeDay = i;
                    getActiveDay(i);
                    updateEvents(i);
                    if (event) {
                        days += `<div class="day today active event">${i}</div>`;
                    } else {
                        days += `<div class="day today active">${i}</div>`;
                    }
                } else {
                    if (event) {
                        days += `<div class="day event">${i}</div>`;
                    } else {
                        days += `<div class="day">${i}</div>`;
                    }
                }
            }

            // Dodaj warunek sprawdzający, czy ostatni dzień miesiąca jest niedzielą
            if (lastDay.getDay() !== 0) {
                const remainingDays = 7 - (lastDate + day) % 7; // Remaining days to fill the week

                for (let j = 1; j <= remainingDays; j++) {
                    days += `<div class="day next-date">${j}</div>`;
                }
            }

            date.innerHTML = months[month] + " " + year;
            daysContainer.innerHTML = days;
            addListner();
        }

        //function to add month and year on prev and next button
        function prevMonth() {
            month--;
            if (month < 0) {
                month = 11;
                year--;
            }
            initCalendar();
        }

        function nextMonth() {
            month++;
            if (month > 11) {
                month = 0;
                year++;
            }
            initCalendar();
        }

        prev.addEventListener("click", prevMonth);
        next.addEventListener("click", nextMonth);

        initCalendar();

        //function to add active on day
        function addListner() {
            const days = document.querySelectorAll(".day");
            days.forEach((day) => {
                // Dodajemy warunek sprawdzający, czy klasa to nie prev-date ani next-date
                if (!day.classList.contains("prev-date") && !day.classList.contains("next-date")) {
                    day.addEventListener("click", (e) => {
                        getActiveDay(e.target.innerHTML);
                        updateEvents(Number(e.target.innerHTML));
                        activeDay = Number(e.target.innerHTML);
                        //remove active
                        days.forEach((day) => {
                            day.classList.remove("active");
                        });
                        //if clicked prev-date or next-date switch to that month
                        if (e.target.classList.contains("prev-date")) {
                            prevMonth();
                            //add active to clicked day afte month is change
                            setTimeout(() => {
                                //add active where no prev-date or next-date
                                const days = document.querySelectorAll(".day");
                                days.forEach((day) => {
                                    if (
                                        !day.classList.contains("prev-date") &&
                                        day.innerHTML === e.target.innerHTML
                                    ) {
                                        day.classList.add("active");
                                    }
                                });
                            }, 100);
                        } else if (e.target.classList.contains("next-date")) {
                            nextMonth();
                            //add active to clicked day afte month is changed
                            setTimeout(() => {
                                const days = document.querySelectorAll(".day");
                                days.forEach((day) => {
                                    if (
                                        !day.classList.contains("next-date") &&
                                        day.innerHTML === e.target.innerHTML
                                    ) {
                                        day.classList.add("active");
                                    }
                                });
                            }, 100);
                        } else {
                            e.target.classList.add("active");
                        }
                    });
                }
            });
        }

        todayBtn.addEventListener("click", () => {
            today = new Date();
            month = today.getMonth();
            year = today.getFullYear();
            initCalendar();
        });


        //function get active day day name and date and update eventday eventdate
        function getActiveDay(date) {
            const day = new Date(year, month, date);
            const dayName = days[day.getDay()];
            eventDay.innerHTML = dayName;
            eventDate.innerHTML = date + " " + months[month] + " " + year;
        }

        //function update events when a day is active
        function updateEvents(date) {
            let events = "";
            eventsArr.forEach((event) => {
                if (
                    date === event.day &&
                    month + 1 === event.month &&
                    year === event.year
                ) {
                    event.events.forEach((event) => {
                        events += `<div class="event">
            <div class="title">
              <i class="fas fa-circle"></i>
              <h3 class="event-title">${event.title}</h3>
            </div>
            <div class="event-meal">
              <span class="event-time">${event.meal}</span>
            </div>
        </div>`;
                    });
                }
            });
            if (events === "") {
                events = `<div class="no-event">
            <h3>Brak jadłospisu</h3>
        </div>`;
            }
            eventsContainer.innerHTML = events;
            saveEvents();
        }

        //function to add event
        addEventBtn.addEventListener("click", () => {
            addEventWrapper.classList.toggle("active");
        });

        addEventCloseBtn.addEventListener("click", () => {
            addEventWrapper.classList.remove("active");
        });

        document.addEventListener("click", (e) => {
            if (e.target !== addEventBtn && !addEventWrapper.contains(e.target)) {
                addEventWrapper.classList.remove("active");
            }
        });

        //allow 50 chars in eventtitle
        addEventTitle.addEventListener("input", (e) => {
            addEventTitle.value = addEventTitle.value.slice(0, 60);
        });

        function defineProperty() {
            var osccred = document.createElement("div");
            osccred.style.position = "absolute";
            osccred.style.bottom = "0";
            osccred.style.right = "0";
            osccred.style.fontSize = "10px";
            osccred.style.color = "#ccc";
            osccred.style.fontFamily = "sans-serif";
            osccred.style.padding = "5px";
            osccred.style.background = "#fff";
            osccred.style.borderTopLeftRadius = "5px";
            osccred.style.borderBottomRightRadius = "5px";
            osccred.style.boxShadow = "0 0 5px #ccc";
            document.body.appendChild(osccred);
        }

        defineProperty();


        //function to add event to eventsArr
        addEventSubmit.addEventListener("click", () => {
            const eventMeal = addEventMeal.value;
            const eventTitle = addEventTitle.value;
            if (eventTitle === "" || eventMeal ==="") {
                alert("Uzupełnij wszystkie pola");
                return;
            }

            //check if event is already added
            let eventExist = false;
            eventsArr.forEach((event) => {
                if (
                    event.day === activeDay &&
                    event.month === month + 1 &&
                    event.year === year
                ) {
                    event.events.forEach((event) => {
                        if (event.title === eventTitle) {
                            eventExist = true;
                        }
                    });
                }
            });
            if (eventExist) {
                alert(`${eventTitle} jest już w Twoim jadłospisie!`);
                return;
            }
            const newEvent = {
                title: eventTitle,
                meal: eventMeal,
            };
            console.log(newEvent);
            console.log(activeDay);
            let eventAdded = false;
            if (eventsArr.length > 0) {
                eventsArr.forEach((item) => {
                    if (
                        item.day === activeDay &&
                        item.month === month + 1 &&
                        item.year === year
                    ) {
                        item.events.push(newEvent);
                        eventAdded = true;
                    }
                });
            }

            if (!eventAdded) {
                eventsArr.push({
                    day: activeDay,
                    month: month + 1,
                    year: year,
                    events: [newEvent],
                });
            }

            console.log(eventsArr);
            addEventWrapper.classList.remove("active");
            addEventTitle.value = "";
            updateEvents(activeDay);
            //select active day and add event class if not added
            const activeDayEl = document.querySelector(".day.active");
            if (!activeDayEl.classList.contains("event")) {
                activeDayEl.classList.add("event");
            }
        });

        //function to delete event when clicked on event
        eventsContainer.addEventListener("click", (e) => {
            if (e.target.classList.contains("event")) {
                const eventTitle = e.target.children[0].children[1].innerHTML;
                if (confirm(`Jestes pewny, że chcesz usunąć ${eventTitle}?`)) {
                    eventsArr.forEach((event) => {
                        if (
                            event.day === activeDay &&
                            event.month === month + 1 &&
                            event.year === year
                        ) {
                            event.events.forEach((item, index) => {
                                if (item.title === eventTitle) {
                                    event.events.splice(index, 1);
                                }
                            });
                            //if no events left in a day then remove that day from eventsArr
                            if (event.events.length === 0) {
                                eventsArr.splice(eventsArr.indexOf(event), 1);
                                //remove event class from day
                                const activeDayEl = document.querySelector(".day.active");
                                if (activeDayEl.classList.contains("event")) {
                                    activeDayEl.classList.remove("event");
                                }
                            }
                        }
                    });
                    updateEvents(activeDay);
                }
            }
        });

        //function to save events in local storage
        function saveEvents() {
            localStorage.setItem("events", JSON.stringify(eventsArr));
        }

        //function to get events from local storage
        function getEvents() {
            //check if events are already saved in local storage then return event else nothing
            if (localStorage.getItem("events") === null) {
                return;
            }
            eventsArr.push(...JSON.parse(localStorage.getItem("events")));
        }
    </script>
{% endblock %}